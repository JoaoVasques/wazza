#user  nobody;
worker_processes  1;

error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        logs/nginx.pid;

events {
  worker_connections  1024;
}

http {
  include       mime.types;
  default_type  application/octet-stream;
  include       naxsi_core.rules;

  access_log  logs/access.log;
  
  sendfile        on;
  #tcp_nopush     on;
  
  #keepalive_timeout  0;
  keepalive_timeout  65;

  proxy_buffering    off;
  proxy_set_header   X-Real-IP $remote_addr;
  proxy_set_header   X-Forwarded-Proto $scheme;
  proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header   Host $http_host;
  proxy_http_version 1.1;

  client_body_buffer_size 16K;
  client_header_buffer_size 5k;
  client_max_body_size 8m;
  large_client_header_buffers 2 1k;
  
  upstream wazza-backend {
    server 127.0.0.1:9443;
  }
  
  gzip  on;

  # don't send the nginx version number in error pages and Server header
  server_tokens off;

  # redirect http to https
  server {
    listen        8080;
    server_name   www.wazza.io;
    return 301 https://$server_name$request_uri;
  }
    
  server {
    listen        8443;
    ssl on;
    server_name  www.wazza.io;
  
    #charset koi8-r; 
   
    location / {
      proxy_pass https://wazza-backend;
    }
    
    # SECURITY

    # http://www.selfsignedcertificate.com/ is useful for development testing
    ssl_certificate      /wazza_io.crt;
    ssl_certificate_key  /wazza.io.key;

    #  # From https://bettercrypto.org/static/applied-crypto-hardening.pdf
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # not possible to do exclusive
    ssl_ciphers 'EDH+CAMELLIA:EDH+aRSA:EECDH+aRSA+AESGCM:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH:+CAMELLIA256:+AES256:+CAMELLIA128:+AES128:+SSLv3:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!DSS:!RC4:!SEED:!ECDSA:CAMELLIA256-SHA:AES256-SHA:CAMELLIA128-SHA:AES128-SHA';
    add_header Strict-Transport-Security max-age=15768000; # six months
    keepalive_timeout    70;
  
    add_header X-Frame-Options "SAMEORIGIN";
    # This header enables the Cross-site scripting (XSS) filter built into most recent web browsers.
    # It's usually enabled by default anyway, so the role of this header is to re-enable the filter for
    # this particular website if it was disabled by the user.
    # https://www.owasp.org/index.php/List_of_useful_HTTP_headers
    add_header X-XSS-Protection "1; mode=block";

    ## Block download agenta
    if ($http_user_agent ~* LWP::Simple|wget|libwww-perl) {
      return 403;
    }
    
    ## Block some nasty robots
    if ($http_user_agent ~ (msnbot|Purebot|Baiduspider|Lipperhey|Mail.Ru|scrapbot) ) {
      return 403;
    }

    ## Deny referal spam
    if ($http_referer ~* (jewelry|viagra|nude|girl|nudit|casino|poker|porn|sex|teen|babes) ) {
      return 403;
    }

    # deny scripts inside writable directories
    location ~* /(images|cache|media|logs|tmp)/.*.(php|pl|py|jsp|asp|sh|cgi)$ {
      return 403;
      error_page 403 /403_error.html;
    }

    ## Disable unwanted http requests
    if ($request_method !~ ^(GET|HEAD|POST)$ )
    {
	    return 444;
    }

  
    location ~ /\.ht {
      deny  all;
    }

  }
}
include servers/*;
